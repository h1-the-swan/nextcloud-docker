version: '3'

services:
  db:
    image: postgres:15-alpine
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - db.env

  redis:
    image: redis:alpine
    restart: always

  app:
    image: nextcloud:26.0-apache
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - ./data:/var/www/html/data:z
    environment:
      - VIRTUAL_HOST=
      - LETSENCRYPT_HOST=
      - LETSENCRYPT_EMAIL=
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    env_file:
      - db.env
    depends_on:
      - db
      - redis
    ports:
      - 48916:80
    networks:
      - proxy-tier
      - default

  cron:
    image: nextcloud:26.0-apache
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - ./data:/var/www/html/data:z
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

  cloudflared:
    image: cloudflare/cloudflared:2023.4.2
    # volumes: 
    #   - ./cloudflared:/etc/cloudflared
    # env_file:
    #   - ./cloudflared/cloudflared.env
    # command: 'tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN} --hello-world'
    # command: 'tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN} --url http://localhost:48916'
    command: 'tunnel --no-autoupdate --loglevel debug run --token ${CLOUDFLARED_TOKEN} --url http://app:80'
    # ports:
    #   - 8080:8080
    restart: 'on-failure'
    networks:
      - proxy-tier
    depends_on:
      - app

volumes:
  db:
  nextcloud:
  certs:
  acme:
  vhost.d:
  html:

networks:
  proxy-tier:
  




  # proxy:
  #   build: ./proxy
  #   restart: always
  #   ports:
  #     - 80:80
  #     - 443:443
  #   labels:
  #     com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
  #   volumes:
  #     - certs:/etc/nginx/certs:ro
  #     - vhost.d:/etc/nginx/vhost.d
  #     - html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #   networks:
  #     - proxy-tier

  # letsencrypt-companion:
  #   image: nginxproxy/acme-companion
  #   restart: always
  #   volumes:
  #     - certs:/etc/nginx/certs
  #     - acme:/etc/acme.sh
  #     - vhost.d:/etc/nginx/vhost.d
  #     - html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   networks:
  #     - proxy-tier
  #   depends_on:
  #     - proxy

# self signed
#  omgwtfssl:
#    image: paulczar/omgwtfssl
#    restart: "no"
#    volumes:
#      - certs:/certs
#    environment:
#      - SSL_SUBJECT=servhostname.local
#      - CA_SUBJECT=my@example.com
#      - SSL_KEY=/certs/servhostname.local.key
#      - SSL_CSR=/certs/servhostname.local.csr
#      - SSL_CERT=/certs/servhostname.local.crt
#    networks:
#      - proxy-tier
